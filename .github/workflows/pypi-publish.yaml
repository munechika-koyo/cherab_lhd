name: Build and Publish to PyPI ðŸ“¦

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main
  release:
    types:
    - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-latest is apple silicon
        os: [ubuntu-latest, macos-13, macos-latest]

    steps:
    - name: Checkout LLVM on macOS
      if: runner.os == 'macOS'
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        ref: release/19.x
        path: llvm-project

    - name: Build OpenMP on macOS
      if: runner.os == 'macOS'
      env:
        MACOSX_DEPLOYMENT_TARGET: ${{ matrix.os == 'macos-13' && '10.9' || '11.0' }}
      working-directory: llvm-project
      run: |
        export PREFIX=$(brew --prefix)
        cmake \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH=$PREFIX \
          -DCMAKE_INSTALL_PREFIX=$PREFIX \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DLIBOMP_INSTALL_ALIASES=OFF \
          -S openmp \
          -B build
        cmake --build build --parallel
        cmake --install build

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22.0

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build sdist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  pypi-publish:
    name: Upload release to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cherab-lhd/
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
          # unpacks all CIBW artifacts into dist/
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish package ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
